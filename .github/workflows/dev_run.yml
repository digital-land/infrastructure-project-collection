name: Run collection
on:
  workflow_dispatch: null
env:
  DLB_BOT_EMAIL: ${{ secrets.DLB_BOT_EMAIL }}
  DLB_BOT_TOKEN: ${{ secrets.DLB_BOT_TOKEN }}
  DLB_BOT_USERNAME: ${{ secrets.DLB_BOT_USERNAME }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Free up disk space
      run: |
        df -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        echo
        df -h

    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Configure git
      run: |
        git config user.email "${DLB_BOT_EMAIL}"
        git config user.name "${DLB_BOT_USERNAME}"
        git remote set-url origin https://${DLB_BOT_USERNAME}:${DLB_BOT_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        git checkout ${GITHUB_REF_NAME}

    - name: Update makerules
      run: make makerules

    - name: Commit updated makerules
      run: make commit-makerules

    - name: Install dependencies
      run: make init

    - name: Run the collector
      run: make collect

    - name: Commit collection logs
      run: make commit-collection

    - name: Configure Development AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{secrets.DEVELOPMENT_AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.DEVELOPMENT_AWS_ACCESS_SECRET}}
        aws-region: eu-west-2

    - name: Save collected resources to Development S3
      env: 
        COLLECTION_DATASET_BUCKET_NAME: ${{secrets.DEVELOPMENT_DATA_S3_BUCKET}}
      run: make save-resources

    - name: Build the collection database
      run: make collection

    - name: Configure Development AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{secrets.DEVELOPMENT_AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.DEVELOPMENT_AWS_ACCESS_SECRET}}
        aws-region: eu-west-2
    
    - name: Push collection database to Development S3
      env:
        COLLECTION_DATASET_BUCKET_NAME: ${{secrets.DEVELOPMENT_DATA_S3_BUCKET}}
      run: make save-collection

    - name: transform collected files
      run: make transformed -j 2
    
    - name: Configure Development AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{secrets.DEVELOPMENT_AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.DEVELOPMENT_AWS_ACCESS_SECRET}}
        aws-region: eu-west-2

    - name: Save transformed files to Development S3
      env:
        COLLECTION_DATASET_BUCKET_NAME: ${{secrets.DEVELOPMENT_DATA_S3_BUCKET}}
      run: make save-transformed

    - name: Build datasets from the transformed files
      run: make dataset

    - name: Configure Development AWS Credentials
      if: always()
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{secrets.DEVELOPMENT_AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.DEVELOPMENT_AWS_ACCESS_SECRET}}
        aws-region: eu-west-2
    
    - name: Save datasets to Development S3
      env:
        COLLECTION_DATASET_BUCKET_NAME: ${{secrets.DEVELOPMENT_DATA_S3_BUCKET}}
        HOISTED_COLLECTION_DATASET_BUCKET_NAME: ${{secrets.DEVELOPMENT_DATA_S3_BUCKET}}
      run: make save-dataset

    - name: Save expectations to Development S3
      if: always()
      env:
        COLLECTION_DATASET_BUCKET_NAME: ${{secrets.DEVELOPMENT_DATA_S3_BUCKET}}
      run: make save-expectations

  check-pipeline-errors:
    runs-on: ubuntu-latest
    needs:
      - build
    if: always() && contains(join(needs.*.result, ','), 'failure')
    steps:
      - name: send failure notification
        uses: slackapi/slack-github-action@v1
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          channel-id: 'planning-data-platform'
          payload: |
            {
              "text": "Collection Run: ${{ github.repository }}",
              "icon_emoji": ":warning:",
              "username": "CollectionRunner",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "Collection Run Failed: ${{ github.repository }} "
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "The report for this run is available on <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|GitHub>"
                  }
                }
              ]
            }
